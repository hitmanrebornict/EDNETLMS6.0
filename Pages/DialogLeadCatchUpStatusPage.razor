@using EDNETLMS.Models
@using EDNETLMS.Pages.Services
@using System.Diagnostics

@inject Radzen.DialogService dialogService
@inject DialogLeadCatchUpStatusPageServices DLCUSPS

<RadzenButton Text="Create" Click=@OpenCreateLeadCatchUpStatusDialog Style="margin-bottom:12px"></RadzenButton>

<RadzenDataGrid TItem="LeadCatchUpStatus" AllowFiltering="true" AllowColumnResize="true" AllowAlternatingRows="false" FilterMode="FilterMode.Advanced" AllowSorting="true" PageSize="5" AllowPaging="true" PagerHorizontalAlign="HorizontalAlign.Left" ShowPagingSummary="true"
				Data="@LCUSList" LogicalFilterOperator="LogicalFilterOperator.Or" SelectionMode="DataGridSelectionMode.Single" RowDoubleClick="@OnRowDoubleClick">
    <Columns>
        <RadzenDataGridColumn TItem="LeadCatchUpStatus" Property="CreatedDate" Title="Created Date" FormatString="{0:MM/dd/yyyy}" />
		<RadzenDataGridColumn TItem="LeadCatchUpStatus" Property="LeadStatus" Title="Lead Status" />
		<RadzenDataGridColumn TItem="LeadCatchUpStatus" Property="LeadCatchUpRemark" Title="Remark" />
		<RadzenDataGridColumn TItem="LeadCatchUpStatus" Property="DoneDate" Title="Done Date" FormatString="{0:MM/dd/yyyy}" />
        <RadzenDataGridColumn TItem="LeadCatchUpStatus" Title="Done" >
			<Template Context="data">
				<RadzenCheckBox TValue="bool" Value="@data.Done" Disabled="true" />
			</Template>
		</RadzenDataGridColumn>
    </Columns>
	
</RadzenDataGrid>

@code {
	[Parameter]
	public int LeadID { get; set; }

	LeadCatchUpStatus newLCUS = new LeadCatchUpStatus();
	List<LeadCatchUpStatus> LCUSList = new List<LeadCatchUpStatus>();

	protected async override Task OnInitializedAsync()
	{
		LCUSList = await DLCUSPS.readLeadCatchUpStatusByLeadIDAsync(LeadID);
		foreach (var item in LCUSList)
		{
			Debug.WriteLine($"LeadCatchUpStatus: {item.CreatedDate}");
		}
		await base.OnInitializedAsync();
	}

	async Task OpenCreateLeadCatchUpStatusDialog()
	{
		await dialogService.OpenAsync<DialogCreateLeadCatchUpStatusPag>("Create Lead Catch Up Status",
		new Dictionary<string, object>() { { "LeadID", LeadID } },
		new DialogOptions() { Width = "700px", Height = "512px", Resizable = true, Draggable = true });
	}

	async Task OnRowDoubleClick(DataGridRowMouseEventArgs<LeadCatchUpStatus> args)
	{
		await dialogService.OpenAsync<EditLeadCatchUpStatusPage>("Edit Lead Catch Up Status",
		new Dictionary<string, object>() { { "selectedLeadCatchUpStatus", args.Data } },
		new DialogOptions() { Width = "700px", Height = "512px", Resizable = true, Draggable = true });
	}

	
}
