@attribute [Authorize]

@page "/followuplist"

@using EDNETLMS.Models
@using EDNETLMS.Pages.Services

@inject ListTablePageServices LTPS
@inject NavigationManager _navigationManager
@inject FollowUpLeadListPageServices FULPS
@inject GlobalData GD

<h3>Follow Up Lead Table</h3>

<RadzenDataGrid TItem="PersonLead" Data="@leadPersonDataList" SelectionMode="DataGridSelectionMode.Single" RowDoubleClick="@OnRowDoubleClick"
				AllowFiltering="true" AllowColumnResize="true" AllowAlternatingRows="false" FilterMode="FilterMode.Simple" AllowSorting="true"
				FilterCaseSensitivity="FilterCaseSensitivity.CaseInsensitive" LogicalFilterOperator="LogicalFilterOperator.Or">
	<Columns>
		<RadzenDataGridColumn TItem="PersonLead" Property="FamilyName" Title="Family Name" />
		<RadzenDataGridColumn TItem="PersonLead" Property="GivenName" Title="Given Name" />
		<RadzenDataGridColumn TItem="PersonLead" Property="LeadStatus" Title="Lead Status" />
		<RadzenDataGridColumn TItem="PersonLead" Property="PIC" Title="PIC" />
		<RadzenDataGridColumn TItem="PersonLead" Property="DoneDate" Title="Follow Up Date" />
		<RadzenDataGridColumn TItem="PersonLead" Title="Done" >
			<Template Context="data">
					<RadzenCheckBox TValue="bool" Value="@data.Done" Disabled="true" />
			</Template>
		</RadzenDataGridColumn>
	</Columns>
</RadzenDataGrid>


@code {
	List<PersonLead> leadPersonDataList = new List<PersonLead>();
	PersonLead selectedPersonLead = new PersonLead();
	
	protected async override Task OnInitializedAsync()
	{
		string username = await GD.getUsernameString();
		leadPersonDataList = await FULPS.verifyRoleAndReadData(username);
		await base.OnInitializedAsync();
	}

	void OnRowDoubleClick(DataGridRowMouseEventArgs<PersonLead> args)
	{
		_navigationManager.NavigateTo("/editlead/" + args.Data.LeadID);
	}
}
